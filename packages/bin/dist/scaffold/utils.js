"use strict";var k=Object.create;var l=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var S=(r,e)=>{for(var i in e)l(r,i,{get:e[i],enumerable:!0})},d=(r,e,i,f)=>{if(e&&typeof e=="object"||typeof e=="function")for(let c of b(e))!P.call(r,c)&&c!==i&&l(r,c,{get:()=>e[c],enumerable:!(f=N(e,c))||f.enumerable});return r};var m=(r,e,i)=>(i=r!=null?k(v(r)):{},d(e||!r||!r.__esModule?l(i,"default",{value:r,enumerable:!0}):i,r)),I=r=>d(l({},"__esModule",{value:!0}),r);var j={};S(j,{copyDir:()=>C,copyFile:()=>a,copyFiles:()=>F,default:()=>y});module.exports=I(j);var o=m(require("fs")),x=m(require("nunjucks")),T=m(require("path")),a=(r,e,i)=>{((i==null?void 0:i.createDirIfNot)??!0)&&!o.existsSync(T.default.resolve(e,"../"))&&o.mkdirSync(T.default.resolve(e,"../"),{recursive:!0}),console.log("Copying file: "+r+" to "+e);let f=i!=null&&i.contentTransform?i==null?void 0:i.contentTransform(o.readFileSync(r,"utf-8")):o.readFileSync(r,"utf-8");o.writeFileSync(e,x.default.renderString(f,(i==null?void 0:i.context)??{}))},F=(...r)=>{for(let e of r)a(...e)},C=(r,e,i)=>{let f=(c,t)=>{let s=c.replace(r,"");o.existsSync(t)||o.mkdirSync(t,{recursive:!0});let h=o.readdirSync(c);for(let n of h){let u=o.lstatSync(`${c}/${n}`);if(u.isDirectory()){if(i!=null&&i.asToCopyy&&!i.asToCopyy(`${s}/${n}`,"directory",{file:n,src:`${c}/${n}`,dest:`${t}/${n}`}))continue;f(`${c}/${n}`,`${t}/${n}`)}else if(u.isSymbolicLink()){if(i!=null&&i.asToCopyy&&!i.asToCopyy(`${s}/${n}`,"file",{file:n,src:`${c}/${n}`,dest:`${t}/${n}`}))continue;let g=o.readlinkSync(`${c}/${n}`);o.symlinkSync(g,`${t}/${n}`)}else{if(i!=null&&i.asToCopyy&&!i.asToCopyy(`${s}/${n}`,"file",{file:n,src:`${c}/${n}`,dest:`${t}/${n}`}))continue;let g=`${t}/${i!=null&&i.fileNameTransform?i.fileNameTransform(n):n}`,$=i==null?void 0:i.context;a(`${c}/${n}`,g,{...i,context:$ instanceof Function?$(n):$})}}};return f(r,e)},y=class{constructor(e){this.opts=e}log(...e){this.opts.logging&&console.log(...e)}copyFile=(...e)=>{this.log("Copying file: "+e[0]),a(...e)};copyFiles=(...e)=>{this.log("Copying files: "+e.map(i=>i[0]).join(", ")),F(...e)};copyDir=(...e)=>{this.log("Copying directory: "+e[0]),C(...e)}};0&&(module.exports={copyDir,copyFile,copyFiles});
