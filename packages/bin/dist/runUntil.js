#!/usr/bin/env node
"use strict";var t=require("commander"),r=require("child_process"),i=new t.Command;i.name("run-until").description("CLI to run a task until another task is run").version("0.0.0");i.argument("<run>","cli task to run").argument("<until>","cli task to run until");i.parse(process.argv);var o=(0,r.spawn)(i.args[0],{shell:!0}),n=()=>{o.kill(),process.exit(0)};o.on("exit",n);o.stdout.on("data",s=>{console.log(s.toString())});(0,r.spawnSync)(i.args[1],{stdio:"inherit",shell:!0});o.off("exit",n);function e(s){try{s()}catch{}}console.log(process.platform);process.platform=="win32"?(0,r.exec)(`taskkill /PID ${o.pid} /T /F`,s=>{s&&console.log("error: "+s.message),e(()=>process.kill(-process.pid,"SIGKILL")),process.exit(0)}):(console.log("killing process with pid "+o.pid),e(()=>process.kill(-o.pid,"SIGKILL")),e(()=>o.kill()),e(()=>process.kill(-process.pid,"SIGKILL")),process.exit(0));
