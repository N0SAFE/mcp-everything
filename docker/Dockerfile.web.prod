# Production Dockerfile for Web App using Turborepo prune
FROM oven/bun:1-alpine AS base

# Install dependencies only when needed
FROM base AS builder
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install Turbo globally
RUN bun install -g turbo@^2

# Copy everything and prune
COPY . .
RUN turbo prune web --docker

# Install dependencies with dev dependencies for building
FROM base AS installer
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install Turbo globally
RUN bun install -g turbo@^2

# First install ALL dependencies (including dev dependencies for building)
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/full/bun.lock* ./
RUN bun install --frozen-lockfile

# Copy all source files
COPY --from=builder /app/out/full/ .

# Set build-time environment variables for Next.js
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_API_PORT
ARG NEXT_PUBLIC_APP_URL
ARG NEXT_PUBLIC_APP_PORT
ARG API_PING_PATH
ARG API_ADMIN_TOKEN
ARG AUTH_SECRET

ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_PORT=$NEXT_PUBLIC_API_PORT
ENV NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL
ENV NEXT_PUBLIC_APP_PORT=$NEXT_PUBLIC_APP_PORT
ENV API_PING_PATH=$API_PING_PATH
ENV API_ADMIN_TOKEN=$API_ADMIN_TOKEN
ENV AUTH_SECRET=$AUTH_SECRET

# Production runner
FROM base AS runner
WORKDIR /app

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application from installer stage
COPY --from=installer --chown=nextjs:nodejs /app ./

# Switch to nextjs user
USER nextjs

# Expose port
EXPOSE 3000

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

# Health check for Render
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Build and start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["sh", "-c", "bun run build:docker --workspace web && bun run start:docker --workspace web"]
